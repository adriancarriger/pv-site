{"version":3,"file":"home.component.spec.js","sourceRoot":"","sources":["../../src/app/+home/home.component.spec.ts"],"names":[],"mappings":";AAAA,wBAOO,uBAAuB,CAAC,CAAA;AAC/B,wBAAqC,2BAA2B,CAAC,CAAA;AACjE,+BAA8B,kBAAkB,CAAC,CAAA;AACjD,wBAAsC,yBAAyB,CAAC,CAAA;AAEhE,kBAAQ,CAAC,iBAAiB,EAAE;IAC1B,IAAI,OAA6B,CAAC;IAElC,6BAAmB,CAAC,cAAM,OAAA;QACxB,8BAAa;QACb,+BAAqB;KACtB,EAHyB,CAGzB,CAAC,CAAC;IACH,oBAAU,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAU,GAAyB;QAC3E,OAAO,GAAG,GAAG,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,CAAC,8BAAa,CAAC,EACpD,UAAC,SAAwB;QAC3B,gBAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,4BAA4B,EAAE,UAAA,IAAI;QACnC,MAAM,CAAC,OAAO;aACX,WAAW,CAAC,8BAAa,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;YACxC,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;YAC1C,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,WAAW,GAAG,aAAa,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC;YACvF,gBAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACtC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAZ,CAAY,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {\n  beforeEach,\n  beforeEachProviders,\n  describe,\n  expect,\n  it,\n  inject,\n} from '@angular/core/testing';\nimport { TestComponentBuilder } from '@angular/compiler/testing';\nimport { HomeComponent } from './home.component';\nimport { ROUTER_FAKE_PROVIDERS } from '@angular/router/testing';\n\ndescribe('Component: Home', () => {\n  let builder: TestComponentBuilder;\n\n  beforeEachProviders(() => [\n    HomeComponent,\n    ROUTER_FAKE_PROVIDERS\n  ]);\n  beforeEach(inject([TestComponentBuilder], function (tcb: TestComponentBuilder) {\n    builder = tcb;\n  }));\n\n  it('should inject the component', inject([HomeComponent],\n      (component: HomeComponent) => {\n    expect(component).toBeTruthy();\n  }));\n\n  it('should build the component', done => {\n    return builder\n      .createAsync(HomeComponent).then(fixture => {\n      let nativeElement = fixture.nativeElement;\n      fixture.detectChanges();\n      let firstH1Text = nativeElement.querySelector('.jumbotron h1:first-of-type').innerHTML;\n      expect(firstH1Text).toBe('Home Page');\n      done();\n    })\n    .catch(e => done.fail(e));\n  });\n});\n"]}