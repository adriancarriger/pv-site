{"version":3,"file":"search-sermons.pipe.js","sourceRoot":"","sources":["../../src/app/pipes/search-sermons.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor: (value?: any) => moment.Moment = (<any>moment).default || moment;\n\n@Pipe({\n  name: 'asSearchSermons'\n})\nexport class SearchSermons implements PipeTransform {\n  transform(value: any, term?, book?, year?, amPm?, meowTest?): any {\n    let books = [], years = [], meridian, queries = [], meridians = {AM: 'Morning', PM: 'Evening'};\n    if (value === undefined) { return; };\n    if (term === null || term === undefined) { return value; }\n    if (term.length) { queries = term.toLowerCase().split( ' ' ); }\n    if (book !== undefined && book !== 'All books') { books.push(book); }\n    if (year !== undefined && year !== 'All years') { years.push(year); }\n    if (amPm !== undefined && amPm !== 'AM/PM') { meridian = meridians[amPm]; }\n    let artClasses = [\n      'adam',\n      'bebas-kai',\n      'love-moment'\n    ];\n    let filtered = value.filter((item) => {\n      // Filter out sermons missing audio\n      if (!item.audio) { return false; }\n      // Merdian\n      if (meridian !== undefined && meridian !== item.meridian) { return false; }\n      // Book filter\n      let sermonVerse = item.verse;\n      for (let i = 0 ; i < books.length; i++) {\n        if (sermonVerse.indexOf( books[i] ) === -1) { return false; }\n      }\n      // Year filter\n      let sermonMoment = moment.unix( item.unix );\n      let sermonYear = sermonMoment.format('YYYY');\n      let sermonDate = sermonMoment.format('M/D/YY');\n      for (let i = 0 ; i < years.length; i++) {\n        if (sermonYear.indexOf( years[i] ) === -1) { return false; }\n      }\n      // Search terms\n      if (term.length) {\n        let speaker = (item.speaker).replace('Pastor ','');\n        let str = (\n          item.name + ' ' + \n          sermonVerse + ' ' + \n          sermonYear + ' ' + \n          sermonDate + ' ' + \n          speaker).toLowerCase();\n        for (let i = 0 ; i < queries.length; i++) {\n            if (str.indexOf( queries[i] ) === -1) { return false; }\n        }\n      }\n      let i = Math.floor(Math.random() * 3);\n      item.randomClass = artClasses[i];\n      return item;\n    });\n    meowTest.count = filtered.length;\n    return filtered;\n  }\n\n}\n"]}